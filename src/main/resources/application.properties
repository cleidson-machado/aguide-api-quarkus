# ========== DATABASE ==========
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://localhost:5432/quarkus_db}
quarkus.datasource.username=${QUARKUS_DATASOURCE_USERNAME:quarkus}
quarkus.datasource.password=${QUARKUS_DATASOURCE_PASSWORD:quarkus123}

# ========== HIBERNATE ORM ==========
# ?? MUDANÇA CRÍTICA: Agora o Flyway controla o schema, não o Hibernate!
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.log.sql=true

# ?? REMOVIDO: quarkus.hibernate-orm.sql-load-script (Flyway vai gerenciar)
# ?? REMOVIDO: quarkus.hibernate-orm.sql-load-script-phase (não precisa mais)

# ========== FLYWAY ==========
# Executa migrações automaticamente na inicialização
quarkus.flyway.migrate-at-start=true

# Cria a tabela flyway_schema_history se não existir
quarkus.flyway.baseline-on-migrate=true

# Versão inicial (útil se você já tem um banco com dados)
quarkus.flyway.baseline-version=0

# Localização dos scripts de migração
quarkus.flyway.locations=db/migration

# ========== PERFIS (DEV vs PROD) ==========
# Em DEV: limpa e recria o banco sempre
%dev.quarkus.flyway.clean-at-start=true

# Em PROD: NUNCA limpa o banco
%prod.quarkus.flyway.clean-at-start=false

# Desabilita validação de schema do Hibernate (Flyway controla tudo)
%dev.quarkus.hibernate-orm.database.generation=none
%dev.quarkus.hibernate-orm.validate-in-dev-mode=false

# ========== CORS ==========
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,PUT,POST,DELETE,PATCH,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with

# ========== HTTP/HTTPS ==========
quarkus.http.host=0.0.0.0
quarkus.http.port=8083

# SSL (descomente quando configurar)
# quarkus.http.ssl.port=8443
# quarkus.http.ssl.certificate.key-store-file=security/keystore.p12
# quarkus.http.ssl.certificate.key-store-password=quarkus
# quarkus.http.insecure-requests=disabled